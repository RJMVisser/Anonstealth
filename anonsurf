#!/bin/bash

### BEGIN INIT INFO
# Provides:          anonsurf
# Required-Start:
# Required-Stop:
# Should-Start:
# Default-Start:
# Default-Stop:
# Short-Description: Transparent Proxy through TOR.
### END INIT INFO
#
# Devs:
# Lorenzo 'Palinuro' Faletra <palinuro@parrotsec.org>
# Lisetta 'Sheireen' Ferrero <sheireen@autistiche.org>
# Francesco 'Mibofra' Bonanno <mibofra@parrotsec.org>
#
# Extended:
# Daniel 'Sawyer' Garcia <dagaba13@gmail.com>
# And RJMVisser <https://github.com/RJMVisser/>
#
# anonsurf is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
# You can get a copy of the license at www.gnu.org/licenses
#
# anonsurf is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Parrot Security OS. If not, see <http://www.gnu.org/licenses/>.


export BLUE='\033[1;94m'
export GREEN='\033[1;92m'
export RED='\033[1;91m'
export RESETCOLOR='\033[1;00m'

# Destinations you don't want routed through Tor
TOR_EXCLUDE="192.168.0.0/16 172.16.0.0/12 10.0.0.0/8"

# The UID Tor runs as
# change it if, starting tor, the command 'ps -e | grep tor' returns a different UID
TOR_UID="tor"

# Tor's TransPort
TOR_PORT="9040"


function notify {
	if [ -e /usr/bin/notify-send ]; then
		/usr/bin/notify-send "AnonSurf" "$1"
	fi
}
export notify


function rootcheck {
	# Make sure only root can run this script
    ME=$(whoami | tr "[:lower:]" "[:upper:]")
    if [ "$(id -u)" -ne 0 ]; then
        echo -e "\n[${RED}!$RESETCOLOR] $RED $ME R U DRUNK?? This script must be run as root$RESETCOLOR\n" >&2
        exit 1
    fi
}

function init {
    rootcheck

	echo -e "[$GREEN*$RESETCOLOR] killing dangerous applications"
	sudo killall -q chrome dropbox iceweasel skype icedove thunderbird firefox firefox-esr chromium xchat hexchat transmission steam firejail
	notify "Dangerous applications killed"
	
	echo -e "[$GREEN*$RESETCOLOR] cleaning some dangerous cache elements"
	bleachbit -c adobe_reader.cache chromium.cache chromium.current_session chromium.history elinks.history emesene.cache epiphany.cache firefox.url_history flash.cache flash.cookies google_chrome.cache google_chrome.history  links2.history opera.cache opera.search_history opera.url_history &> /dev/null
	notify "Cache cleaned"
}

function ip {
    #MYIP=$(curl -s https://ipinfo.io/ip)
    MYIP=$(curl -s ifconfig.me)
	echo -e "\nMy ip is:\n"
	echo "$MYIP"
	echo -e "\n"
	notify "My IP is:\n\n$MYIP"
}

function country {
    MYCOUNTRY=$(geoiplookup "$(curl -s ifconfig.me)" | sed -r 's/GeoIP Country Edition: //g')
    #MYCOUNTRY=$(curl -s https://ipvigilante.com/ | jq '.data.country_name')
    #MYCOUNTRY=${MYCOUNTRY//\"/}
	echo -e "\nMy country is:\n"
	echo "$MYCOUNTRY"
	echo -e "\n"
	notify "My country is:\n\n$MYCOUNTRY"
}








#function firefox_tor {
#	directory="/dev/shm/.mozilla/firefox/profile/"
#	profile="profile_for_tor.tar.gz"
#
#	if [ -d "$directory" ] ; then
#		echo -e "\n[$CYAN nfo$RESETCOLOR ]$GREEN Please wait ...$RESETCOLOR\n"
#		notify "Please wait ..."
#		sleep 0.7
#		echo -e "\n[$CYAN nfo$RESETCOLOR ]$GREEN The profile was loaded in the ram.$RESETCOLOR\n"
#		notify "The profile was loaded in the ram."
#		sleep 0.4
#		killall -q iceweasel firefox
#		iceweasel -profile /dev/shm/.mozilla/firefox/profile/anonprofile.parrot &
#		exit
#	else
#		echo -e "\n[$CYAN nfo$RESETCOLOR ]$GREEN Please wait ...$RESETCOLOR\n"
#		notify "Please wait ..."
#		sleep 0.3
#		cd /opt/anonsurf/
#		cp $profile /dev/shm/ #> /dev/null
#		sleep 0.3
#		cd /dev/shm/
#		tar xzvf $profile #> /dev/null
#		sleep 0.3
#		echo -e "\n[$CYAN nfo$RESETCOLOR ]$GREEN The profile was loaded in the ram.$RESETCOLOR\n"
#		notify "Starting browser in RAM-only mode"
#		sleep 0.4
#		killall -q iceweasel firefox
#		firefox -profile /dev/shm/.mozilla/firefox/profile/anonprofile.parrot &
#		exit
#	fi
#}






function start {
	# Make sure only root can run this script
    rootcheck
	
    echo -e "\n[${BLUE}i$RESETCOLOR] Starting anonymous mode:\n"
	
	if [ ! -e /tmp/tor.pid ]; then
		echo -e "$RED*$RESETCOLOR Tor is not running! ${GREEN}starting it... $RESETCOLOR" >&2
        echo -e -n "\n[$GREEN*$RESETCOLOR] Stopping service nscd"
        /usr/sbin/systemctl stop nscd 2>/dev/null || echo " (already stopped)"
        echo -e -n "\n[$GREEN*$RESETCOLOR] Stopping service resolvconf"
        /usr/sbin/systemctl stop resolvconf 2>/dev/null || echo -n " (already stopped)"
        echo -e -n "\n[$GREEN*$RESETCOLOR] Stopping service dnsmasq"
        /usr/sbin/systemctl stop dnsmasq 2>/dev/null || echo -n " (already stopped)"
        killall dnsmasq nscd resolvconf 2>/dev/null || true
        sleep 2
        killall -9 dnsmasq 2>/dev/null || true


        if [ -e /etc/tor/torrc ]; then
             mv /etc/tor/torrc /etc/tor/torrc.backup_by_anonsurf
        fi
        if [ -e /etc/anonsurf/torrc ]; then
             cp /etc/anonsurf/torrc /etc/tor/torrc
        fi
        if [ -e /etc/tor/onion.pac ]; then
             mv /etc/tor/onion.pac /etc/tor/onion.pac.backup_by_anonsurf
        fi
        if [ -e /etc/anonsurf/onion.pac ]; then
             cp /etc/anonsurf/onion.pac /etc/tor/onion.pac
        fi


        #/usr/sbin/systemctl start tor
        echo -e "\n[$GREEN*$RESETCOLOR] Starting tor"
        /usr/sbin/tor --quiet -f /etc/tor/torrc
        sleep 20
	fi


	if ! [ -f /etc/iptables/backup_by_anonsurf.rules ]; then
		/usr/sbin/iptables-save > /etc/iptables/backup_by_anonsurf.rules
        echo -e "[$GREEN*$RESETCOLOR] Saved iptables rules"
	fi
	
	/usr/sbin/iptables -F
	/usr/sbin/iptables -t nat -F
	
	mv /etc/resolv.conf /etc/resolv.conf.backup_by_anonsurf
	echo -e 'nameserver 127.0.0.1' > /etc/resolv.conf
    echo -e "[$GREEN*$RESETCOLOR] Modified resolv.conf to use Tor and ParrotDNS/OpenNIC"

    # disable ipv6
    echo -e "[$GREEN*$RESETCOLOR] Disabling IPv6 for security reasons"
    /sbin/sysctl -q -w net.ipv6.conf.all.disable_ipv6=1
    /sbin/sysctl -q -w net.ipv6.conf.default.disable_ipv6=1

    # set iptables nat
    echo -e "[$GREEN*$RESETCOLOR] Configuring iptables rules to route all traffic through tor"
    /usr/sbin/iptables -t nat -A OUTPUT -m owner --uid-owner $TOR_UID -j RETURN

	#set dns redirect
	/usr/sbin/iptables -t nat -A OUTPUT -p udp --dport 53 -j REDIRECT --to-ports 53
	/usr/sbin/iptables -t nat -A OUTPUT -p tcp --dport 53 -j REDIRECT --to-ports 53
	/usr/sbin/iptables -t nat -A OUTPUT -p udp -m owner --uid-owner $TOR_UID -m udp --dport 53 -j REDIRECT --to-ports 53
	
	#resolve .onion domains mapping 10.192.0.0/10 address space
	/usr/bin/iptables -t nat -A OUTPUT -p tcp -d 10.192.0.0/10 -j REDIRECT --to-ports $TOR_PORT
	/usr/sbin/iptables -t nat -A OUTPUT -p udp -d 10.192.0.0/10 -j REDIRECT --to-ports $TOR_PORT
	
	#exclude local addresses
	for NET in $TOR_EXCLUDE 127.0.0.0/9 127.128.0.0/10; do
        /usr/sbin/iptables -t nat -A OUTPUT -d "$NET" -j RETURN
        /usr/sbin/iptables -A OUTPUT -d "$NET" -j ACCEPT
	done
	
	#redirect all other output through TOR
	/usr/sbin/iptables -t nat -A OUTPUT -p tcp --syn -j REDIRECT --to-ports $TOR_PORT
	/usr/sbin/iptables -t nat -A OUTPUT -p udp -j REDIRECT --to-ports $TOR_PORT
	/usr/sbin/iptables -t nat -A OUTPUT -p icmp -j REDIRECT --to-ports $TOR_PORT
	
	#accept already established connections
	/usr/sbin/iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
	
    #allow only tor output
    echo -e "[$GREEN*$RESETCOLOR] Allowing only tor to browse in clearnet"
    /usr/sbin/iptables -A OUTPUT -m owner --uid-owner $TOR_UID -j ACCEPT
    /usr/sbin/iptables -A OUTPUT -j REJECT

	echo -e "\n[${GREEN}i$RESETCOLOR] All traffic is redirected throught Tor"
	echo -e "\n[${BLUE}i$RESETCOLOR] You are under AnonSurf tunnel"
	notify "Global Anonymous Proxy Activated"
    sleep 1
    notify "Dance like no one's watching. Encrypt like everyone is :)"
    sleep 10
}


function stop {
	# Make sure only root can run our script
    rootcheck

	echo -e "\n[${BLUE}i$RESETCOLOR] Stopping anonymous mode:\n"
	
	echo -e "$RED*$RESETCOLOR Tor is running! ${GREEN}Stopping it... $RESETCOLOR\n" >&2
    #echo -e "\n $GREEN*$RESETCOLOR Deleted all iptables rules"

	/usr/sbin/iptables -F
	/usr/sbin/iptables -t nat -F

	
	if [ -f /etc/iptables/backup_by_anonsurf.rules ]; then
		/usr/sbin/iptables-restore < /etc/iptables/backup_by_anonsurf.rules
		rm /etc/iptables/backup_by_anonsurf.rules
		echo -e "[$GREEN*$RESETCOLOR] Iptables rules restored"
	fi
    echo -e -n "[$GREEN*$RESETCOLOR] Restore DNS service"
    rm /etc/resolv.conf || true

	if [ -e /etc/resolv.conf.backup_by_anonsurf ]; then
		mv /etc/resolv.conf.backup_by_anonsurf /etc/resolv.conf
	fi

    echo -e "\n[$GREEN*$RESETCOLOR] Re-enabling IPv6"
    # re-enable ipv6
    /sbin/sysctl -q -w net.ipv6.conf.all.disable_ipv6=0
    /sbin/sysctl -q -w net.ipv6.conf.default.disable_ipv6=0

    #/usr/sbin/systemctl stop tor
    echo -e "[$GREEN*$RESETCOLOR] Stopping tor"
    pkill tor
    sleep 2
    #killall tor
    #sleep 6


    if [ -e /etc/tor/torrc.backup_by_anonsurf ]; then
         mv /etc/tor/torrc.backup_by_anonsurf /etc/tor/torrc 
    fi
    if [ -e /etc/tor/onion.pac.backup_by_anonsurf ]; then
         mv /etc/tor/onion.pac.backup_by_anonsurf /etc/tor/onion.pac 
    fi



    echo -e -n "[$GREEN*$RESETCOLOR] Starting service nscd"
    /usr/sbin/systemctl start nscd 2>/dev/null || echo " (Failed start)"
    echo -e -n "\n[$GREEN*$RESETCOLOR] Starting service resolvconf"
    /usr/sbin/systemctl start resolvconf 2>/dev/null || echo -n " (Failed start)"
    echo -e -n "\n[$GREEN*$RESETCOLOR] Starting service dnsmasq"
    /usr/sbin/systemctl start dnsmasq 2>/dev/null || echo -n " (Failed start)"

    sleep 1

	echo -e "\n\n[${GREEN}i$RESETCOLOR] All traffic is no redirected throught Tor"

	echo -e "\n[${BLUE}i$RESETCOLOR] Anonymous mode stopped"
    notify "Global Anonymous Proxy Closed - Stop dancing :("
	sleep 4
}

function change {
    exitnode-selector
    sleep 10
    echo -e "[$GREEN*$RESETCOLOR] Tor daemon reloaded and forced to change nodes\n"
    notify "Identity changed - let's dance again!"
    sleep 1
}


function status {
    #/usr/sbin/systemctl status tor
    if [ -n "$(pidof tor)" ]
    then
        echo -e "[$GREEN*$RESETCOLOR] tor running"
    else
        echo -e "[$RED*$RESETCOLOR] tor not running"
    fi
    
    ports="$(netstat -tulpn)"
    #if [ -n "$($ports | grep -q $TOR_UID)" ]
    if echo "$ports" | grep -q "$TOR_UID"
    then
        echo -e "$ports" | grep "Proto" 
        echo -e "$ports" | grep "$TOR_UID" 
    fi

    #cat /tmp/anonsurf-tor.log || cat /var/log/tor/log
}

function dnsstart {
    echo "Configuring OpenNIC DNS service"
    notify "Configuring OpenNIC DNS service"
    mv /etc/resolv.conf /etc/resolv.conf_backup_by_opennic
    cat resolv.conf.opennic > /etc/resolvconf/resolv.conf.d/tail
    cat resolv.conf.opennic > /etc/resolv.conf
    /usr/sbin/systemctl restart resolvconf
    touch /etc/anonsurf/opennic.lock
    echo "done"
    notify "done"
}

function dnsstop {
    echo "Deconfiguring OpenNIC DNS service"
    notify "Deconfiguring OpenNIC DNS service"
    mv /etc/resolv.conf_backup_by_opennic /etc/resolv.conf
    echo > /etc/resolvconf/resolv.conf.d/tail
    /usr/sbin/systemctl restart resolvconf
    rm /etc/anonsurf/opennic.lock
    echo "done"
    notify "done"
}

function dns {
    if [ -f opennic.lock ]; then
        dnsstop
    elif [ ! -f opennic.lock ]; then
        dnsstart
    fi
}

case "$1" in
	"start")
		zenity --question --text="Do you want anonsurf to kill dangerous applications and clean some application caches?" --width 400 && init
		start
	;;
	"stop")
		zenity --question --text="Do you want anonsurf to kill dangerous applications and clean some application caches?" --width 400 && init
		stop
	;;
    "changeid"|"change-id"|"change")
		change
	;;
	"status")
		status
	;;
	"myip"|"ip")
		ip
	;;
	"mycountry"|"country")
		country
	;;
	#firefox_tor)
	#	firefox_tor
	#;;
	"restart")
		$0 stop
		sleep 1
		$0 start
	;;
   *)
echo -e "
Parrot AnonSurf Module (v 2.0)
    Developed by Lorenzo \"Palinuro\" Faletra <palinuro@parrotsec.org>
    Lisetta \"Sheireen\" Ferrero <sheireen@parrotsec.org>
    Francesco \"Mibofra\" Bonanno <mibofra@parrotsec.org>
    and a huge amount of Caffeine + some GNU/GPL v3 stuff
    
    Extended by Daniel \"Sawyer\" Garcia <dagaba13@gmail.com>
    And RJMVisser <https://github.com/RJMVisser/>

	Usage:
	anonsurf {$GREEN""start$RESETCOLOR|$GREEN""stop$RESETCOLOR|$GREEN""restart$RESETCOLOR|$GREEN""changeid$RESETCOLOR|$GREEN""status$RESETCOLOR|$GREEN""myip$RESETCOLOR|$GREEN""mycountry$RESETCOLOR|$GREEN""dns$RESETCOLOR}
	
    $BLUE start$RESETCOLOR \t - Start system-wide TOR tunnel
    $BLUE stop$RESETCOLOR \t - Stop anonsurf and return to clearnet
    $BLUE restart$RESETCOLOR \t - Combines \"stop\" and \"start\" options
    $BLUE changeid$RESETCOLOR \t - Changes identity restarting TOR
    $BLUE status$RESETCOLOR \t - Check if AnonSurf is working properly
    $BLUE myip$RESETCOLOR \t - Shows current ip
    $BLUE mycountry$RESETCOLOR \t - Shows current country
    $BLUE dns$RESETCOLOR \t - Replace your DNS with the OpenNIC DNS servers.

Dance like no one's watching. Encrypt like everyone is.
" >&2
exit 1
;;
esac

echo -e "$RESETCOLOR"
exit 0

